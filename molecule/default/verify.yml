---

- name: Verify
  hosts: lookyloo
  gather_facts: true
  vars:
    lookyloo_start: /var/_lookyloo/lookyloo/bin/start.py
    binary_redis: /var/_lookyloo/valkey/src/valkey-server
    config: /var/_lookyloo/lookyloo/config/generic.json
    ports:
      # lookyloo gunicorn
      - { h: 0.0.0.0, p: 5100 }
    url: http://localhost:5100
    is_container: false
    has_nginx: false
  pre_tasks:
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
    - name: Set fact is_container
      ansible.builtin.set_fact:
        is_container: true
      when: >
        (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )
    - name: Check if nginx is present
      ansible.builtin.stat:
        path: /etc/nginx/sites-enabled/https
      register: nginx_conf
    - name: Set fact has_nginx
      ansible.builtin.set_fact:
        has_nginx: true
      when:
        - nginx_conf.stat.exists
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
    - name: Validate that needed packages are present
      ansible.builtin.assert:
        that: ansible_facts.packages['python3-venv'] | length > 0

    - name: Check lookyloo start file
      ansible.builtin.stat:
        path: "{{ lookyloo_start }}"
      register: bin1
    - name: Validate lookyloo start.py is present
      ansible.builtin.assert:
        that: bin1.stat.exists and bin1.stat.size != 0 and bin1.stat.mode == '0775'

    - name: Check redis file
      ansible.builtin.stat:
        path: "{{ binary_redis }}"
      register: bin2
    - name: Validate redis binary is present
      ansible.builtin.assert:
        that: bin2.stat.exists and bin2.stat.size != 0 and bin2.stat.mode == '0775'

    - name: Check lookyloo config file
      ansible.builtin.stat:
        path: "{{ config }}"
      register: cfg1
    - name: Validate lookyloo configuration files are present
      ansible.builtin.assert:
        that: cfg1.stat.exists and cfg1.stat.size != 0

    - name: Check lookyloo socket
      ansible.builtin.stat:
        path: /var/_lookyloo/lookyloo/cache/cache.sock
      register: sock1
    - name: Validate lookyloo socket
      ansible.builtin.assert:
        that:
          - sock1.stat.exists
          - sock1.stat.issock != 0
      when:
        - not is_container|bool

    - name: Check lookyloo socket 2
      ansible.builtin.stat:
        path: /var/_lookyloo/lookyloo/indexing/indexing.sock
      register: sock2
    - name: Validate lookyloo socket
      ansible.builtin.assert:
        that:
          - sock2.stat.exists
          - sock2.stat.issock != 0
      when:
        - not is_container|bool

    - name: Ensure lookyloo processes are running
      ansible.builtin.command: pgrep -u _lookyloo gunicorn
      register: ps3
      changed_when: false
      failed_when: false
    - name: Validate ps output
      ansible.builtin.assert:
        that: ps3.stdout | length > 0
      when:
        - not is_container|bool

    - name: Check all processes
      ansible.builtin.command: ps aux
      changed_when: false
      register: psa
    - name: Debug | ps aux output
      ansible.builtin.debug:
        var: psa
        verbosity: 1

    - name: Ensure ports are listening
      ansible.builtin.wait_for:
        host: "{{ item.h }}"
        port: "{{ item.p }}"
        timeout: 10
      with_items: "{{ ports }}"
      when:
        - not is_container|bool

    - name: Fetch localhost endpoint
      ansible.builtin.uri:
        url: "{{ url }}"
        validate_certs: no
        return_content: yes
      register: web
      failed_when: false
    - name: Validate localhost endpoint
      ansible.builtin.assert:
        that:
          - "'lookyloo' in web.content"
      when:
        - not is_container|bool

    - name: Logs check
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          grep -rin error /var/_lookyloo/lookyloo/logs/ | tail -20
      args:
        executable: /bin/bash
      register: logs2
      changed_when: false
      failed_when: false

    - name: Service logs check
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          grep -i error /var/log/lookyloo-* | tail -20
      args:
        executable: /bin/bash
      register: logs2
      changed_when: false
      failed_when: false

    - name: Uwhoisd logs check
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          grep -i error /var/log/uwhoisd_* | tail -20
      args:
        executable: /bin/bash
      register: logs3
      changed_when: false
      failed_when: false

    - name: Nginx
      when:
        - has_nginx | bool
        - not is_container|bool
      block:
        - name: Ensure nginx port is listening
          ansible.builtin.wait_for:
            host: 0.0.0.0
            port: 443
            timeout: 10
        - name: Fetch nginx endpoint
          ansible.builtin.uri:
            url: https://localhost
            validate_certs: no
            return_content: yes
          register: web2
          failed_when: false
        - name: Validate nginx endpoint
          ansible.builtin.assert:
            that:
              - "'lookyloo' in web2.content"

    - name: Logs
      ansible.builtin.debug:
        msg: "WARNING! Error messages in logs"
      when:
        - "'ERROR' in logs1.stdout or 'ERROR' in logs2.stdout or 'ERROR' in logs3.stdout"
